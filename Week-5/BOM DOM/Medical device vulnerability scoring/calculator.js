
let values = {
    AV : undefined ,
    AC : undefined,
    PR : undefined,
    UI : undefined,
    scope : undefined,
    conf : undefined,
    integ : undefined,
    avail : undefined,
    health : undefined,
    sens : undefined
};



function updateScore() {
    
    //Updating new value in global object.
    if(this.name in values){
    
        values[this.name ] = this.value;

    }
    
    //Checking if all radio button have been selected
    let checkNullValue = Object.values(values).every(val => {
        if (val == null) {
          return false;
        }
      
        return true;
      });

    
    if(checkNullValue){
        let finalScore = calculateScore().toFixed(1);
        document.getElementById("score").innerText = finalScore;
        document.getElementById("warning").style.display = "none";
    }
    

}



function calculateScore(){

    let baseScore = scoreBase();

    if( baseScore ){

        let scopeStatus = 1;

        if( values.scope == "scope_C"){
            scopeStatus = 1.08;
        }

        let finalScore = scopeStatus * ( ( 3.326258289 * baseScore ) + ( 1.1 * scoreExploitability() ) );

        return finalScore;
    }
    else{
        return 0;
    }
    
}



function scoreBase(){

    let score = ( baseConfidentiality() + baseIntegrity() + baseAvailaibility() );
    return ( score );

}

function baseConfidentiality(){

        if(values.conf == "conf_N"){

                return 0;
            
        }
        else if(values.conf == "conf_L"){

            if(values.sens == "sens_N"){
                return 0.22;
            }
            else if(values.sens == "sens_L"){
                return 0.65;
            }
            else{
                return 0.85;
            }
        }
        else{
            if(values.sens == "sens_N"){
                return 0.56;
            }
            else if(values.sens == "sens_L"){
                return 0.75;
            }
            else{
                return 0.95;
            }
        }
}

function baseIntegrity(){

    if(values.integ == "integ_N"){

        if(values.health == "health_N"){
            return 0;
        }
        else if(values.health == "health_L"){
            return 0.55;
        }
        else{
            return 0.85;
        }
    }
    else if(values.integ == "integ_L"){

        if(values.health == "health_N"){
            return 0.22;
        }
        else if(values.health == "health_L"){
            return 0.60;
        }
        else{
            return 0.90;
        }
    }
    else{
        
        if(values.health == "health_N"){
            return 0.56;
        }
        else if(values.health == "health_L"){
            return 0.75;
        }
        else{
            return 0.95;
        }
    }
}

function baseAvailaibility(){

    if(values.avail == "avail_N"){
        if(values.health == "health_N"){
            return 0;
        }
        else if(values.health == "health_L"){
            return 0.55;
        }
        else{
            return 0.85;
        }
    }
    else if(values.avail == "avail_L"){

        if(values.health == "health_N"){
            return 0.22;
        }
        else if(values.health == "health_L"){
            return 0.60;
        }
        else{
            return 0.90;
        }
    }
    else{

        if(values.health == "health_N"){
            return 0.56;
        }
        else if(values.health == "health_L"){
            return 0.65;
        }
        else{
            return 0.95;
        }
    }
}




function scoreExploitability(){

    return ( attackVector() * attackComplexity() * priviledgeRequired() * userInteraction() );

}

function attackVector(){

    if( values.AV == "AV_N" ){
        return 0.85;
    }
    else if( values.AV == "AV_A" ){
        return 0.62;
    }
    else if( values.AV == "AV_L" ){
        return 0.55;
    }
    else{
        return 0.20;
    }

}

function attackComplexity(){

    if( values.AC == "AC_L" ){
        return 0.77;
    }
    else{
        return 0.44;
    }

}

function priviledgeRequired(){

    if( values.PR == "PR_N" ){
        return 0.85;
    }
    else if( values.PR == "PR_L" ){
        return 0.62;
    }
    else{
        return 0.27;
    }

}

function userInteraction(){

    if( values.UI == "UI_N" ){
        return 0.85;
    }
    else{
        return 0.62;
    }

}




// Getting all radio button 
let x = document.getElementsByClassName("option");

// Adding event listener to each radio button and calling Update score function
for (let index = 0; index < x.length; index++) {
    x[index].addEventListener("click", updateScore);
}
